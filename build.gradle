/**************************************************************************
 * Copyright 2017 Analog Devices Inc.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 ***************************************************************************/
 
//----------------------
// Plugin configuration
//

plugins {
	// Apply build-scan first - run build with -Dscan to build with a scan
	id 'com.gradle.build-scan' version '1.6'

	// Core plugins
	id 'java-gradle-plugin'
	id 'groovy'
	id 'maven-publish'
	
	// Community plugins
	id 'com.gradle.plugin-publish' version '0.9.7'
	id 'com.dorongold.task-tree' version '1.2.2'
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

//---------
// Project
//

project.description = 'Basic Gradle Plugin for Python'
project.group = 'com.analog.garage'


// Gradle 3.x requires at least Java 7
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	jcenter()
}

dependencies {
	compile localGroovy()
	testCompile 'junit:junit:4.12'
}

task copyExternalJars(type: Copy) {
	from configurations.runtime, configurations.testCompile
	into "$buildDir/external-libs"
  }
  
task setupEclipse(dependsOn: [copyExternalJars, pluginUnderTestMetadata]) {
	group 'Build Setup'
	description = 'Setup external libs needed for Eclipse project.'
	
	doLast {
		
	}
}

// There is no java to document.
javadoc.enabled = false

//--------------------
// Publish artifacts
//

publishPlugins.doFirst {
	// Prevent accidental publication of snapshot version
	if (version.endsWith('SNAPSHOT'))
		throw new GradleException('Cannot publish SNAPSHOT version')
}

pluginBundle {
	website = 'https://github.com/AnalogDevicesLyricLabs/pygrad'
	vcsUrl = 'https://github.com/AnalogDevicesLyricLabs/pygrad'
	description = 'A basic python plugin (not stable!)'
	tags = ['python']

	plugins {
		basePlugin {
			id = 'com.analog.garage.pygrad-base'
			displayName = 'python-base'
		}
		standardPlugin {
			id = 'com.analog.garage.pygrad'
			displayName = 'pygrad'
		}
	}
}

